version: '3.7'

services:
  minio:
    image: minio/minio:RELEASE.2020-10-28T08-16-50Z
    volumes:
      - minio_data:/data
    ports:
      - "9000:${MINIO_PORT}"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  image-object-service:
    build: ./Image-Object-Service
    ports:
      - "8000:${IMAGE_OBJECT_SERVICE_PORT}"
    volumes:
      - "./Image-Object-Service/src:/usr/app/src"
    environment:
      PORT: ${IMAGE_OBJECT_SERVICE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
    depends_on:
      - minio
      

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=event_metadata
    ports:
      - 27017:27017
    expose:
      - 27017
    volumes:
      - mongodb_data_container:/data/db

  logdb:
    build: ./Middleware/LoggingDB
    image: logger-mysql
    volumes:
      - logger_container:/data/logdb
    logging:
        driver: none
    command: --init-file /data/logdb/init.sql 
    environment:
       MYSQL_ROOT_PASSWORD: pw
       MYSQL_DATABASE: logDb
       MYSQL_USER: user
       MYSQL_PASSWORD: pw
    ports:
      - "1234:3306"
      
      
  #phpAdmin:
  #  image: phpmyadmin/phpmyadmin:5.0.1
  #  environment:
  #    PMA_HOST: logdb
  #    PMA_USER: root
  #    PMA_PASSWORD: pw
  #  ports:
  #    - "1334:80"
  #  depends_on:
  #    - logdb
      
  metadata-service:
    build: ./Metadata-Service/MetadataService
    image: metadata-service
    container_name: metadata-service
    env_file:
      - ./Metadata-Service/MetadataService/metadataService.env
    depends_on:
      - mongodb
    ports:
      - 1331:8080
    
#  iot-simulator-service:
#    build: ./IOT-Simulator
#    command: sh -c './wait-for middleware:8080 -t 300 -- python -u ./src/sim.py'
#    depends_on:
#        - middleware
#    volumes:
#      - "${PATH_TO_IMAGE_DIR}:/app/data"
#    environment:
#          API_ENDPOINT: ${API_ENDPOINT}
          
  workflow-service:
    build: ./Workflow
    command: sh -c './wait-for middleware:8080 -t 300 -- python -u ./src/workflow.py'
    depends_on:
        - middleware
        - image-object-service
    volumes:
      - "${PATH_TO_IMAGE_DIR}:/app/data"
    environment:
          API_ENDPOINT: ${API_ENDPOINT}
          IOS_ENDPOINT: "http://image-object-service:${IMAGE_OBJECT_SERVICE_PORT}"
          METADATA_ENDPOINT: "http://metadata-service:8080"

  middleware:
    build: ./Middleware
    command: sh -c './wait-for logdb:3306 -t 200 -- java -jar /app/AICMIDDLEWARE-0.0.1-SNAPSHOT.jar'
    depends_on:
      - metadata-service
      - image-object-service
      - logdb
    ports:
      - "9999:8080"
    environment:
          DROPBOX_FOLDERNAME: ${DROPBOX_FOLDERNAME}
          DROPBOX_ACCESSTOKEN: ${DROPBOX_ACCESSTOKEN}

  frontend:
    build: ./frontend
    volumes: 
      - "./frontend/src:/usr/app/src"
    ports: 
      - "8080:4200"
      
volumes:
  minio_data:
  mongodb_data_container:
  logger_container:
